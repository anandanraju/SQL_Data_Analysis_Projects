DROP DATABASE IF EXISTS PIZZA_DATA_ANALYSIS;

USE PIZZA_DATA_ANALYSIS

CREATE DATABASE IF NOT EXISTS PIZZA_DATA_ANALYSIS;

SELECT * FROM ORDER_DETAILS;
SELECT * FROM ORDERS;
SELECT * FROM PIZZA_TYPES;
SELECT * FROM PIZZAS;

-- Retrieve the total number of orders placed ?
SELECT COUNT(DISTINCT ORDER_ID) FROM ORDERS;

-- CALCULATE TOTAL REVENUE GENERATED BY PIZZA SALES ?
SELECT OD.PIZZA_ID, OD.QUANTITY, P.PRICE FROM ORDER_DETAILS AS OD 
JOIN PIZZAS AS P ON P.PIZZA_ID = OD.PIZZA_ID;

SELECT CAST(SUM(OD.QUANTITY*P.PRICE) AS DECIMAL(10,2)) AS TOTAL_REVENUE FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON P.PIZZA_ID = OD.PIZZA_ID;

-- IDENTIFYING THE HIGHEST PRICE PIZZA ?
SELECT PT.NAME AS "PIZZA NAME", CAST(P.PRICE AS DECIMAL(10,2)) AS "PRICE"
FROM PIZZAS AS P JOIN PIZZA_TYPES AS PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
ORDER BY PRICE DESC LIMIT 1;

WITH CTE AS (
SELECT PT.NAME AS "PIZZA_NAME", CAST(P.PRICE AS DECIMAL(10,2)) AS "PRICE",
RANK() OVER (ORDER BY PRICE DESC) AS RNK
FROM PIZZAS AS P JOIN PIZZA_TYPES AS PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
) SELECT "PIZZA_NAME", "PRICE" FROM CTE WHERE RNK=1


-- IDENTIFY THE MOST COMMON PIZZA SIZE ORDERED ?
SELECT P.SIZE, COUNT(DISTINCT OD.ORDER_ID) AS "TOTAL_ORDERS", SUM(OD.QUANTITY) AS "TOTAL QUANTITY ORDERED"
FROM ORDER_DETAILS AS OD JOIN PIZZAS AS P ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY P.SIZE ORDER BY TOTAL_ORDERS DESC;

-- LIST THE TOP 5 MOST ORDERED PIZZA TYPES ALONG WITH THEIR QUANTITIES ?
SELECT PT.NAME AS "PIZZA_NAME", COUNT(DISTINCT OD.ORDER_ID) AS "ORDER_COUNT", SUM(OD.QUANTITY) AS "TOTAL_QUANTITY"
FROM ORDER_DETAILS OD JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID
JOIN PIZZA_TYPES PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
GROUP BY PIZZA_NAME ORDER BY TOTAL_QUANTITY DESC LIMIT 5; 

-- JOIN THE NECESSARY TABLES TO FIND THE TOTAL QUANTITY OF EACH PIZZA CATEGORY ORDERED ?
SELECT PT.CATEGORY AS "PIZZA_CATEGORY", SUM(OD.QUANTITY) AS "TOTAL_QUANTITY" FROM ORDER_DETAILS OD 
JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID 
JOIN PIZZA_TYPES PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
GROUP BY PIZZA_CATEGORY ORDER BY TOTAL_QUANTITY DESC;

-- DETERMINE THE DISTRIBUTION OF ORDERS BY HOURS OF THE DAY ?
SELECT HOUR(ORDERS.TIME) AS "HOUR_OF_THE_DAY", COUNT(DISTINCT ORDER_ID) AS "NO_OF_ORDERS"
FROM ORDERS GROUP BY HOUR_OF_THE_DAY ORDER BY NO_OF_ORDERS DESC;

-- FIND THE CATEGORY_WISE DISTRIBUTION OF PIZZAS ?
SELECT CATEGORY, COUNT(DISTINCT PIZZA_TYPE_ID) AS "NO_OF_PIZZAS"
FROM PIZZA_TYPES GROUP BY CATEGORY ORDER BY NO_OF_PIZZAS;

-- CALCULATE THE AVERAGE NUMBER OF PIZZAS ORDERED PER DAY ?
WITH CTE AS ( SELECT O.DATE AS "DATE", SUM(OD.QUANTITY) AS "TOTAL_PIZZA_ORDERED"
FROM ORDER_DETAILS OD JOIN ORDERS O ON O.ORDER_ID = OD.ORDER_ID
GROUP BY DATE ORDER BY TOTAL_PIZZA_ORDERED DESC)
SELECT AVG(TOTAL_PIZZA_ORDERED) AS "AVG_ORDERS_PER_DAY" FROM CTE

-- DETERMINE THE TOP 3 MOST ORDERED PIZZA TYPES BASED ON REVENUE ?
SELECT PT.NAME AS "PIZZA_NAME", SUM(OD.QUANTITY * P.PRICE) AS "TOTAL_REVENUE"
FROM ORDER_DETAILS OD
JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID
JOIN PIZZA_TYPES PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
GROUP BY PIZZA_NAME ORDER BY TOTAL_REVENUE DESC LIMIT 3;

-- CALCULATE THE PERCENTAGE CONTRIBUTION OF EACH PIZZA TYPE TO TOTAL REVENUES ?

SELECT PIZZA_TYPES.CATEGORY AS "PIZZA_CATEGORY", CONCAT(ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)/
-- TOTAL REVENUE
(SELECT SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) FROM ORDER_DETAILS 
JOIN PIZZAS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID)*100,2),"%") AS "REVENUE_CONTRIBUTION_FROM_PIZZA"
FROM ORDER_DETAILS JOIN PIZZAS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID GROUP BY PIZZA_TYPES.CATEGORY 
ORDER BY REVENUE_CONTRIBUTION_FROM_PIZZA DESC;

-- CALCULATE THE REVENUE CONTRIBUTION OF EACH PIZZA BY PIZZA NAME ?
SELECT PIZZA_TYPES.NAME AS "PIZZA_NAME", CONCAT(ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)/
-- TOTAL REVENUE
(SELECT SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) FROM ORDER_DETAILS 
JOIN PIZZAS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID)*100,2),"%") AS "REVENUE_CONTRIBUTION_FROM_PIZZA"
FROM ORDER_DETAILS JOIN PIZZAS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID GROUP BY PIZZA_TYPES.NAME 
ORDER BY REVENUE_CONTRIBUTION_FROM_PIZZA DESC;

-- CALCULATE THE REVENUE CONTRIBUTION OF EACH PIZZA BY PIZZA INGREDIENTS ?	
SELECT PIZZA_TYPES.INGREDIENTS AS "PIZZA_INGREDIENTS", CONCAT(ROUND(SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE)/
-- TOTAL REVENUE
(SELECT SUM(ORDER_DETAILS.QUANTITY * PIZZAS.PRICE) FROM ORDER_DETAILS 
JOIN PIZZAS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID)*100,2),"%") AS "REVENUE_CONTRIBUTION_FROM_PIZZA"
FROM ORDER_DETAILS JOIN PIZZAS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
JOIN PIZZA_TYPES ON PIZZA_TYPES.PIZZA_TYPE_ID = PIZZAS.PIZZA_TYPE_ID GROUP BY PIZZA_TYPES.INGREDIENTS 
ORDER BY REVENUE_CONTRIBUTION_FROM_PIZZA DESC;

-- ANALYZE THE CUMULATIVE REVENUE GENERATED OVER TIME ?
WITH CTE AS (SELECT O.DATE AS "DATE", ROUND(SUM(OD.QUANTITY * P.PRICE),2) AS "REVENUE"
FROM ORDER_DETAILS AS OD JOIN ORDERS O ON O.ORDER_ID = OD.ORDER_ID
JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY DATE ORDER BY REVENUE DESC) 
SELECT DATE, REVENUE, ROUND((SUM(REVENUE) OVER (ORDER BY DATE)),2) AS "CUMULATIVE_SUM"
FROM CTE GROUP BY DATE, REVENUE

-- DETERMINE THE TOP 3 MOST ORDERED PIZZA TYPES BASED ON REVENUE FOR EACH PIZZA CATEGORY ?
WITH CTE AS ( SELECT PT.CATEGORY AS PIZZA_CATEGORY, PT.NAME AS PIZZA_NAME, 
ROUND(SUM(OD.QUANTITY * P.PRICE), 2) AS REVENUE
FROM ORDER_DETAILS OD 
JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID 
JOIN PIZZA_TYPES PT ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
GROUP BY PT.CATEGORY, PT.NAME),
CTE1 AS (SELECT PIZZA_CATEGORY, PIZZA_NAME, REVENUE, 
@RANK := IF(@CURRENT_CATEGORY = PIZZA_CATEGORY, @RANK + 1, 1) AS RANK,
@CURRENT_CATEGORY := PIZZA_CATEGORY FROM CTE, (SELECT @RANK := 0, @CURRENT_CATEGORY := '') AS R
ORDER BY PIZZA_CATEGORY, REVENUE DESC) 
SELECT PIZZA_CATEGORY, PIZZA_NAME, REVENUE FROM CTE1
WHERE RANK IN (1, 2, 3) ORDER BY PIZZA_CATEGORY, PIZZA_NAME, REVENUE;
